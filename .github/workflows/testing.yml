name: Tests

on:
    push:
        branches:
            - main
            - dev
            - temp_test_branch  # if in need, create such a temporary branch to test some functions
    pull_request:
        branches:
            - main
            - dev

jobs:
    test:
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash -l {0}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macOS-latest]
                python-version: ["3.7", "3.9", "3.10"]

        steps:
            - uses: actions/checkout@v3

            - name: Set up Conda
              uses: conda-incubator/setup-miniconda@v2
              with:
                  activate-environment: pypots-test
                  python-version: ${{ matrix.python-version }}
                  environment-file: pypots/tests/environment_test.yml
                  auto-activate-base: false

            - name: Fetch the test environment details
              run: |
                  which python
                  conda info
                  conda list

            - name: Test with pytest
              run: |
                  # run tests separately here due to Segmentation Fault in test_clustering when run all in 
                  # one command with `pytest` on MacOS. Bugs not caught, so this is a trade-off to avoid SF.
                  python -m pytest -rA pypots/tests/test_classification.py -n auto --cov=pypots --dist=loadgroup 
                  python -m pytest -rA pypots/tests/test_imputation.py -n auto --cov=pypots --cov-append --dist=loadgroup
                  python -m pytest -rA pypots/tests/test_clustering.py -n auto --cov=pypots --cov-append --dist=loadgroup
                  python -m pytest -rA pypots/tests/test_forecasting.py -n auto --cov=pypots --cov-append --dist=loadgroup
                  python -m pytest -rA pypots/tests/test_data.py -n auto --cov=pypots --cov-append --dist=loadgroup
                  python -m pytest -rA pypots/tests/test_logging.py -n auto --cov=pypots --cov-append --dist=loadgroup

            - name: Generate the LCOV report
              run: |
                  python -m coverage lcov

            - name: Submit the report
              uses: coverallsapp/github-action@master
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  path-to-lcov: 'coverage.lcov'